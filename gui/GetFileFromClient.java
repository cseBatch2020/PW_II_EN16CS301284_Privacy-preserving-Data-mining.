/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;
import java.awt.Color;
import src.SimpleFileClient;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author maxtech
 */
public class GetFileFromClient extends javax.swing.JInternalFrame {

    public static ArrayList<String> column_list = new ArrayList<>();
    public static ArrayList<String> atr_data = new ArrayList<>();
    ArrayList<Integer> Attr_index = new ArrayList<>();
    public static StringBuilder client_data;
    public static String enc_Key;
    public static int enc = 2;
    public static int port;
    public static int initialport;
    public int portcount=0;

    /**
     * Creates new form FrmTrain
     */
    public GetFileFromClient() {
        initComponents();
//        this.getContentPane().setBackground(new Color(153,51,0));
        Main_Menu.myTable = new DefaultTableModel();
        jTable2.setModel(Main_Menu.myTable);
        jTable2.setAutoResizeMode(jTable2.AUTO_RESIZE_OFF);
        File f = new File("share");
        deleteDir(f);
        f.mkdir();
        enc = 2;
    }
    public static String sessionKey = "";

    int NewKey = 2;
    String KEY = "";
    int colnamee = 0;
    int fileIndex = 0;
    String Acc = "";
    String Err = "";
    String Btime = "";
    String Stime = "";
    String Memory = "";

    public static boolean deleteDir(File dir) {
        if (dir.isDirectory()) {
            String[] children = dir.list();
            for (int i = 0; i < children.length; i++) {
                boolean success = deleteDir(new File(dir, children[i]));
                if (!success) {
                    return false;
                }
            }
        }

// The directory is now empty so delete it
        return dir.delete();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField4 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Client Data");
        setPreferredSize(new java.awt.Dimension(1160, 620));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextField4.setText("2222");
        getContentPane().add(jTextField4, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 110, 80, -1));

        jLabel2.setBackground(new java.awt.Color(19, 21, 7));
        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("Port:-");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, 60, -1));

        jButton7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton7.setText("Connect");
        jButton7.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 100, 130, 30));

        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton3.setText("Add To Data Set");
        jButton3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 100, 160, 30));

        jLabel3.setBackground(new java.awt.Color(19, 21, 7));
        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("Selected Data Set :");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 100, -1, -1));

        jLabel1.setBackground(new java.awt.Color(19, 21, 7));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setText("All Data :");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 110, 100, -1));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 170, 500, 320));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, 510, 320));

        jTextField1.setText("2");
        getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, 70, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("No. Of Clients:-");
        jLabel4.setToolTipText("");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, -1, -1));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setText("NEXT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 100, 100, 30));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel5.setText("Get File From Client");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 20, 330, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

   public void ReadData(File f) {
        int count = 0;
        column_list = new ArrayList<>();
        Attr_index = new ArrayList<>();
        try {
            if (!f.isFile() && !f.exists()) {
                JOptionPane.showMessageDialog(rootPane, "NOT A VALID FILE");
                return;
            }
//            MyList = new ArrayList<>();
//            attributesuniquedata = new ArrayList<>();
            DefaultTableModel dtm = new DefaultTableModel();
            FileInputStream fin = new FileInputStream(f);
            BufferedReader br = new BufferedReader(new InputStreamReader(fin));
            String lin = "";
            int i = 0;
            int totalelement = 0;
            while ((lin = br.readLine()) != null) {

                String[] str = lin.split(",");
                String[] row = new String[str.length];
                int j = 0;
                while (j < str.length) {
                    if (i < 1) {
                        dtm.addColumn(str[j]);

                    } else {
                        row[j] = str[j];
                    }
                    j++;
                }
                if (count == 0) {
                    int j1 = 0;
                    while (j1 < str.length - 1) {
                        column_list.add(str[j1]);
                        j1++;
                    }
                    count++;
                }
                if (i > 2) {
                    dtm.addRow(row);
                }
                i++;
            }
            jTable1.setModel(dtm);
//            sessionKey = KEY;
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       TableModel dtm1 = jTable1.getModel();
       TableModel dtm2 = jTable2.getModel();
       int cnt=dtm2.getColumnCount();
        if (dtm2.getColumnCount() == 0) {
            //jTable3.setModel(dtm1);
           Main_Menu.myTable = new DefaultTableModel();
            int i = 0;
            int colm = 0;
            while (i < dtm1.getColumnCount()) {
                Main_Menu.myTable.addColumn(dtm1.getColumnName(i));
                colm++;
                i++;
            }
            i = 0;
            while (i < dtm1.getRowCount()) {
                String[] row = new String[dtm1.getColumnCount()];
                int j = 0;
                StringBuffer rr = new StringBuffer();
                while (j < Main_Menu.myTable.getColumnCount()) {

                    if (j == dtm1.getColumnCount() - 1) {
                        row[j] = "" + dtm1.getValueAt(i, j);
                        rr.append(" " + row[j]);

                    } else {
                        row[j] = "" + dtm1.getValueAt(i, j);
                        rr.append(" " + row[j]);
                    }
                    j++;
                }
                atr_data.add(rr.substring(1));
                Main_Menu.myTable.addRow(row);
                i++;
            }
            jTable2.setModel(Main_Menu.myTable);

            return;
        }
        atr_data.clear();
        Main_Menu.myTable = new DefaultTableModel();

        int i = 0;
        int colm = 0;
        while (i < dtm2.getColumnCount() - 1) {
            Main_Menu.myTable.addColumn(dtm2.getColumnName(i));
            colm++;
            i++;
        }
        i = 0;
        while (i < dtm1.getColumnCount()) {
            //MainMenu.MyTable.addColumn(dtm2.getColumnName(i));
            Main_Menu.myTable.addColumn(dtm1.getColumnName(i));
            colm++;
            i++;
        }

        i = 0;

        while (i < dtm1.getRowCount()) {
            String[] row = new String[dtm1.getColumnCount() - 1 + dtm2.getColumnCount()];
            int j = 0;
            int jj = 0;
            while (j < Main_Menu.myTable.getColumnCount() - 1) {
                if (j < dtm2.getColumnCount() - 1) {
                    row[j] = "" + dtm2.getValueAt(i, j);
                } else {
                    row[j] = (String) dtm1.getValueAt(i, jj);
                    jj++;
                }

                j++;
            }
            StringBuffer sb = new StringBuffer();
            row[j] = "" + dtm1.getValueAt(i, dtm1.getColumnCount() - 1);
            for (String string : row) {
                sb.append(" " + string);
            }
            atr_data.add(sb.substring(1));
            Main_Menu.myTable.addRow(row);
            i++;
        }
        jTable2.setModel(Main_Menu.myTable);
    }//GEN-LAST:event_jButton3ActionPerformed
    /* returns md5 of input file */
    public static String getMD5File(byte[] input) {
        try {
            MessageDigest md = MessageDigest.getInstance("MD5");
            byte[] messageDigest = md.digest(input);
            BigInteger number = new BigInteger(1, messageDigest);
            String hashtext = number.toString(16);
            // Now we need to zero pad it if you actually want the full 32 chars.
            while (hashtext.length() < 32) {
                hashtext = "0" + hashtext;
            }
            return hashtext;
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException(e);
        }
    }
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        try {
            int no_of_client=Integer.parseInt(jTextField1.getText());
            SimpleFileClient.SERVER ="localhost";
            SimpleFileClient.SOCKET_PORT = Integer.parseInt(jTextField4.getText());
            SimpleFileClient.FILE_TO_RECEIVED = "share" + File.separator + "Data" + fileIndex + ".csv";
            enc_Key = getMD5File(jTextField4.getText().getBytes());
            SimpleFileClient.recieveData(Integer.parseInt(jTextField4.getText()),enc_Key);
            File f = new File("share" + File.separator + "Data" + fileIndex + ".csv");
            ReadData(f);
            if(portcount==Integer.parseInt(jTextField1.getText())-1)
            {
               initialport=port-(no_of_client-1);
            }
            else
            {
            port = Integer.parseInt(jTextField4.getText())+1;
            portcount=portcount+1;
            jTextField4.setText(String.valueOf(port));
            }
           
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.hide();
        gui.Preprocess fdp = new Preprocess();
        Main_Menu.jdp.add(fdp);
        fdp.show();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
