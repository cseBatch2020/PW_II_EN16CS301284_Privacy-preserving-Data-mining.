/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

//import static Proposed.GetFileFromClient.attribute_list;
import static gui.GetFileFromClient.atr_data;
import static gui.GetFileFromClient.client_data;
import java.awt.Color;
import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import src.Getfrequency;

/**
 *
 * @author JAI GANESH
 */
public class Preprocess extends javax.swing.JInternalFrame {

//    StringBuilder sbuild = new StringBuilder();
    public static LinkedHashMap<String, Integer> preprocessData = new LinkedHashMap<>();
    public static ArrayList<String> dataset = new ArrayList<>();

    /**
     * Creates new form Preprocess
     */
    public Preprocess() {
        initComponents();
//        this.getContentPane().setBackground(new Color(153,51,0));
        setLocation(210, 30);
        for (int i = 0; i < atr_data.size(); i++) {
            jTextArea1.append(atr_data.get(i) + "\n");
        }
    }

    public void Load_DataSet(StringBuilder sb) {
        try {
            int count = 0;
            int index = 0;
            String[] lines = sb.toString().split("\n");
            for (int i = 0; i < lines.length; i++) {
//                if (index < lines.length) {
                StringBuffer sbuff = new StringBuffer();
                dataset.add(lines[i]);
                index++;
            }

        } catch (Exception ee) {
            ee.printStackTrace();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setPreferredSize(new java.awt.Dimension(1100, 600));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, 520, 340));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Itemsets");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 150, 100, -1));

        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 190, 540, 340));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Preprocess Data");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 150, 140, -1));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton2.setText("Preprocess");
        jButton2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, 130, 30));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setText("NEXT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 90, 90, 30));

        jLabel1.setFont(new java.awt.Font("Segoe UI Semilight", 1, 18)); // NOI18N
        jLabel1.setText("Preprocess Data");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 30, 210, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        preprocessData.clear();
        client_data = new StringBuilder(jTextArea1.getText());
        Load_DataSet(client_data);
        src.Getfrequency util = new Getfrequency();
        preprocessData = util.getFrequency(client_data);
        client_data = new StringBuilder();
        client_data.append("Items" + "\t : \t" + "Frequency" + "\n");
        for (Map.Entry<String, Integer> entry : preprocessData.entrySet()) {
            String key = entry.getKey();
            Integer value = entry.getValue();
            client_data.append(key + "\t : \t" + value + "\n");
        }
        jTextArea2.append(client_data.toString());
        JOptionPane.showMessageDialog(rootPane, "Preprocess completed");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.hide();
        AprioriAlgorithm ap = new AprioriAlgorithm();
        Main_Menu.jdp.add(ap);
        ap.show();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
}
